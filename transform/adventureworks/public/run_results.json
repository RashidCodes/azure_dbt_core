{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.0", "generated_at": "2024-04-29T11:56:26.620186Z", "invocation_id": "9aa779d1-cc41-41bc-9f2f-0995e880d6a1", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:21.308891Z", "completed_at": "2024-04-29T11:56:21.344754Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:21.381748Z", "completed_at": "2024-04-29T11:56:22.813595Z"}], "thread_id": "Thread-5", "execution_time": 1.7369251251220703, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-37f9-0000-00010786e129"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.dim_order_status", "compiled": true, "compiled_code": "with order_status as (\n    select distinct status as order_status\n    from\n        adventureworks.sales.salesorderheader\n)\n\nselect\n    \n    \nmd5(cast(coalesce(cast(order_status.order_status as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as order_status_key,\n    order_status,\n    case\n        when order_status = 1 then 'in_process'\n        when order_status = 2 then 'approved'\n        when order_status = 3 then 'backordered'\n        when order_status = 4 then 'rejected'\n        when order_status = 5 then 'shipped'\n        when order_status = 6 then 'cancelled'\n        else 'no_status'\n    end as order_status_name\nfrom order_status", "relation_name": "adventureworks.marts.dim_order_status"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:21.214044Z", "completed_at": "2024-04-29T11:56:21.342232Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:21.349736Z", "completed_at": "2024-04-29T11:56:22.812556Z"}], "thread_id": "Thread-1", "execution_time": 1.7682602405548096, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-380e-0000-00010786d885"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.dim_address", "compiled": true, "compiled_code": "select\n    \n    \nmd5(cast(coalesce(cast(address.addressid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as address_key,\n    address.addressid,\n    address.city as city_name,\n    stateprovince.name as state_name,\n    countryregion.name as country_name,\n    'rashid' as legend\nfrom adventureworks.person.address as address\nleft join adventureworks.person.stateprovince as stateprovince\n    on address.stateprovinceid = stateprovince.stateprovinceid\nleft join adventureworks.person.countryregion as countryregion\n    on stateprovince.countryregioncode = countryregion.countryregioncode", "relation_name": "adventureworks.marts.dim_address"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:21.337815Z", "completed_at": "2024-04-29T11:56:21.347967Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:21.390739Z", "completed_at": "2024-04-29T11:56:22.884104Z"}], "thread_id": "Thread-8", "execution_time": 1.7969231605529785, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-380e-0000-00010786d889"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.fact_workorder", "compiled": true, "compiled_code": "select\n    \n    \nmd5(cast(coalesce(cast(workorderid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as workorder_key,\n    \n    \nmd5(cast(coalesce(cast(productid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as product_key,\n    workorderid,\n    scrapreasonid,\n    orderqty,\n    scrappedqty,\n    startdate,\n    enddate,\n    duedate,\n    modifieddate\nfrom adventureworks.production.workorder as workorder", "relation_name": "adventureworks.marts.fact_workorder"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:21.230168Z", "completed_at": "2024-04-29T11:56:21.343596Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:21.374219Z", "completed_at": "2024-04-29T11:56:22.999895Z"}], "thread_id": "Thread-2", "execution_time": 1.909607172012329, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-36d3-0000-000107868f4d"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.dim_credit_card", "compiled": true, "compiled_code": "with salesorderheader as (\n    select distinct creditcardid\n    from adventureworks.sales.salesorderheader\n    where creditcardid is not null\n)\n\nselect\n    \n    \nmd5(cast(coalesce(cast(salesorderheader.creditcardid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as creditcard_key,\n    salesorderheader.creditcardid,\n    creditcard.cardtype\nfrom salesorderheader\ninner join adventureworks.sales.creditcard as creditcard\n    on salesorderheader.creditcardid = creditcard.creditcardid", "relation_name": "adventureworks.marts.dim_credit_card"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:21.325648Z", "completed_at": "2024-04-29T11:56:21.345486Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:21.384466Z", "completed_at": "2024-04-29T11:56:23.021291Z"}], "thread_id": "Thread-6", "execution_time": 1.9368259906768799, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-36d3-0000-000107868f55"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.dim_product", "compiled": true, "compiled_code": "select\n    \n    \nmd5(cast(coalesce(cast(product.productid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as product_key,\n    product.productid,\n    product.name as product_name,\n    product.productnumber,\n    product.color,\n    product.class,\n    productsubcategory.name as product_subcategory_name,\n    productcategory.name as product_category_name\nfrom adventureworks.production.product as product\ninner join adventureworks.production.productsubcategory as productsubcategory\n    on product.productsubcategoryid = productsubcategory.productsubcategoryid\ninner join adventureworks.production.productcategory as productcategory\n    on productsubcategory.productcategoryid = productcategory.productcategoryid", "relation_name": "adventureworks.marts.dim_product"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:21.330047Z", "completed_at": "2024-04-29T11:56:21.346543Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:21.387608Z", "completed_at": "2024-04-29T11:56:23.080203Z"}], "thread_id": "Thread-7", "execution_time": 1.9872159957885742, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-37f9-0000-00010786e12d"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.fact_sale", "compiled": true, "compiled_code": "with salesorderheader as (\n    select\n        salesorderid,\n        customerid,\n        creditcardid,\n        shiptoaddressid,\n        status as order_status,\n        cast(orderdate as date) as orderdate\n    from adventureworks.sales.salesorderheader\n),\n\nsalesorderdetail as (\n    select\n        salesorderid,\n        salesorderdetailid,\n        productid,\n        orderqty,\n        unitprice,\n        unitprice * orderqty as revenue\n    from adventureworks.sales.salesorderdetail\n)\n\nselect\n    \n    \nmd5(cast(coalesce(cast(salesorderdetail.salesorderid as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(salesorderdetailid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as sales_key,\n    \n    \nmd5(cast(coalesce(cast(productid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as product_key,\n    \n    \nmd5(cast(coalesce(cast(customerid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_key,\n    \n    \nmd5(cast(coalesce(cast(creditcardid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as creditcard_key,\n    \n    \nmd5(cast(coalesce(cast(shiptoaddressid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as ship_address_key,\n    \n    \nmd5(cast(coalesce(cast(order_status as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as order_status_key,\n    orderdate,\n    salesorderdetail.salesorderid,\n    salesorderdetail.salesorderdetailid,\n    salesorderdetail.unitprice,\n    salesorderdetail.orderqty,\n    salesorderdetail.revenue\nfrom salesorderdetail\ninner join salesorderheader\n    on salesorderdetail.salesorderid = salesorderheader.salesorderid", "relation_name": "adventureworks.marts.fact_sale"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:21.292335Z", "completed_at": "2024-04-29T11:56:21.344281Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:21.378757Z", "completed_at": "2024-04-29T11:56:23.094495Z"}], "thread_id": "Thread-3", "execution_time": 2.001207113265991, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-37f9-0000-00010786e131"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.dim_customer", "compiled": true, "compiled_code": "select\n    \n    \nmd5(cast(coalesce(cast(customer.customerid as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_key,\n    customer.customerid,\n    person.businessentityid as personbusinessentityid,\n    concat(coalesce(person.firstname, ''), ' ', coalesce(person.middlename, ''), ' ', coalesce(person.lastname, '')) as fullname,\n    store.businessentityid as storebusinessentityid,\n    store.storename\nfrom adventureworks.sales.customer as customer\nleft join adventureworks.person.person as person\n    on customer.personid = person.businessentityid\nleft join adventureworks.sales.store as store\n    on customer.storeid = store.businessentityid", "relation_name": "adventureworks.marts.dim_customer"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:21.296253Z", "completed_at": "2024-04-29T11:56:21.957978Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:21.958915Z", "completed_at": "2024-04-29T11:56:23.134539Z"}], "thread_id": "Thread-4", "execution_time": 2.483124017715454, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-36d3-0000-000107868f59"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.dim_date", "compiled": true, "compiled_code": "\n    \nwith base_dates as (\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n     + \n    \n    p12.generated_number * power(2, 12)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n     cross join \n    \n    p as p12\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 5963\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    dateadd(\n        day,\n        (row_number() over (order by 1) - 1),\n        cast('2008-01-01' as timestamp)\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2024-04-29' as timestamp)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as timestamp) as date_day\nfrom\n    date_spine d\n\n\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast(\n\n    dateadd(\n        year,\n        -1,\n        d.date_day\n        )\n\n as date) as prior_year_date_day,\n        cast(\n\n    dateadd(\n        day,\n        -364,\n        d.date_day\n        )\n\n as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    cast(\n\n    dateadd(\n        day,\n        -1,\n        d.date_day\n        )\n\n as date) as prior_date_day,\n    cast(\n\n    dateadd(\n        day,\n        1,\n        d.date_day\n        )\n\n as date) as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end as day_of_week,\n    date_part('dayofweekiso', d.date_day) as day_of_week_iso,\n    -- long version not implemented on Snowflake so we're doing it manually :/\n    case dayname(d.date_day)\n        when 'Mon' then 'Monday'\n        when 'Tue' then 'Tuesday'\n        when 'Wed' then 'Wednesday'\n        when 'Thu' then 'Thursday'\n        when 'Fri' then 'Friday'\n        when 'Sat' then 'Saturday'\n        when 'Sun' then 'Sunday'\n    end as day_of_week_name,\n    dayname(d.date_day) as day_of_week_name_short,\n    date_part('day', d.date_day) as day_of_month,\n    date_part('dayofyear', d.date_day) as day_of_year,\n\n    \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end - 1),\n        d.date_day\n        )\n\n as date) as week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end - 1),\n        d.date_day\n        )\n\n as date)\n        )\n\n as date) as week_end_date,\n    \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.prior_year_over_year_date_day) = 7 then 1\n            else date_part('dayofweek', d.prior_year_over_year_date_day) + 1\n        end - 1),\n        d.prior_year_over_year_date_day\n        )\n\n as date) as prior_year_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.prior_year_over_year_date_day) = 7 then 1\n            else date_part('dayofweek', d.prior_year_over_year_date_day) + 1\n        end - 1),\n        d.prior_year_over_year_date_day\n        )\n\n as date)\n        )\n\n as date) as prior_year_week_end_date,\n    cast(date_part('week', d.date_day) as integer) as week_of_year,\n\n    cast(date_trunc('week', d.date_day) as date) as iso_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        cast(date_trunc('week', d.date_day) as date)\n        )\n\n as date) as iso_week_end_date,\n    cast(date_trunc('week', d.prior_year_over_year_date_day) as date) as prior_year_iso_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        cast(date_trunc('week', d.prior_year_over_year_date_day) as date)\n        )\n\n as date) as prior_year_iso_week_end_date,\n    cast(date_part('weekiso', d.date_day) as integer) as iso_week_of_year,\n\n    cast(date_part('week', d.prior_year_over_year_date_day) as integer) as prior_year_week_of_year,\n    cast(date_part('weekiso', d.prior_year_over_year_date_day) as integer) as prior_year_iso_week_of_year,\n\n    cast(date_part('month', d.date_day) as integer) as month_of_year,\n    to_char(d.date_day, 'MMMM')  as month_name,\n    to_char(d.date_day, 'MON')  as month_name_short,\n\n    cast(date_trunc('month', d.date_day) as date) as month_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        month,\n        1,\n        date_trunc('month', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as month_end_date,\n\n    cast(date_trunc('month', d.prior_year_date_day) as date) as prior_year_month_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        month,\n        1,\n        date_trunc('month', d.prior_year_date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as prior_year_month_end_date,\n\n    cast(date_part('quarter', d.date_day) as integer) as quarter_of_year,\n    cast(date_trunc('quarter', d.date_day) as date) as quarter_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        quarter,\n        1,\n        date_trunc('quarter', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as quarter_end_date,\n\n    cast(date_part('year', d.date_day) as integer) as year_number,\n    cast(date_trunc('year', d.date_day) as date) as year_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n\n", "relation_name": "adventureworks.marts.dim_date"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:23.702575Z", "completed_at": "2024-04-29T11:56:23.747308Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:23.748351Z", "completed_at": "2024-04-29T11:56:24.667916Z"}], "thread_id": "Thread-10", "execution_time": 1.0918047428131104, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-36d3-0000-000107868f5d"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.fact_workorder_monthly", "compiled": true, "compiled_code": "select\n    \n    \nmd5(cast(coalesce(cast(date.month_end_date as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(product_key as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as workorder_monthly_key,\n    count(*) as workorder_count,\n    date.month_end_date as work_order_month_end_date,\n    product_key\nfrom adventureworks.marts.fact_workorder as workorder\ninner join adventureworks.marts.dim_date as date on workorder.startdate = date.date_day\ngroup by\n    work_order_month_end_date,\n    product_key", "relation_name": "adventureworks.marts.fact_workorder_monthly"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-29T11:56:23.710520Z", "completed_at": "2024-04-29T11:56:24.668806Z"}, {"name": "execute", "started_at": "2024-04-29T11:56:24.672468Z", "completed_at": "2024-04-29T11:56:26.458882Z"}], "thread_id": "Thread-11", "execution_time": 2.9108190536499023, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b3fe0c-0001-36d3-0000-000107868f69"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.adventureworks.report_sale", "compiled": true, "compiled_code": "select\n    fact_sale.\"SALES_KEY\",\n  fact_sale.\"ORDERDATE\",\n  fact_sale.\"SALESORDERID\",\n  fact_sale.\"SALESORDERDETAILID\",\n  fact_sale.\"UNITPRICE\",\n  fact_sale.\"ORDERQTY\",\n  fact_sale.\"REVENUE\",\n    dim_product.\"PRODUCTID\",\n  dim_product.\"PRODUCT_NAME\",\n  dim_product.\"PRODUCTNUMBER\",\n  dim_product.\"COLOR\",\n  dim_product.\"CLASS\",\n  dim_product.\"PRODUCT_SUBCATEGORY_NAME\",\n  dim_product.\"PRODUCT_CATEGORY_NAME\",\n    dim_customer.\"CUSTOMERID\",\n  dim_customer.\"PERSONBUSINESSENTITYID\",\n  dim_customer.\"FULLNAME\",\n  dim_customer.\"STOREBUSINESSENTITYID\",\n  dim_customer.\"STORENAME\",\n    dim_credit_card.\"CREDITCARDID\",\n  dim_credit_card.\"CARDTYPE\",\n    dim_address.\"ADDRESSID\",\n  dim_address.\"CITY_NAME\",\n  dim_address.\"STATE_NAME\",\n  dim_address.\"COUNTRY_NAME\",\n  dim_address.\"LEGEND\",\n    dim_order_status.\"ORDER_STATUS\",\n  dim_order_status.\"ORDER_STATUS_NAME\",\n    dim_date.\"PRIOR_DATE_DAY\",\n  dim_date.\"NEXT_DATE_DAY\",\n  dim_date.\"PRIOR_YEAR_DATE_DAY\",\n  dim_date.\"PRIOR_YEAR_OVER_YEAR_DATE_DAY\",\n  dim_date.\"DAY_OF_WEEK\",\n  dim_date.\"DAY_OF_WEEK_ISO\",\n  dim_date.\"DAY_OF_WEEK_NAME\",\n  dim_date.\"DAY_OF_WEEK_NAME_SHORT\",\n  dim_date.\"DAY_OF_MONTH\",\n  dim_date.\"DAY_OF_YEAR\",\n  dim_date.\"WEEK_START_DATE\",\n  dim_date.\"WEEK_END_DATE\",\n  dim_date.\"PRIOR_YEAR_WEEK_START_DATE\",\n  dim_date.\"PRIOR_YEAR_WEEK_END_DATE\",\n  dim_date.\"WEEK_OF_YEAR\",\n  dim_date.\"ISO_WEEK_START_DATE\",\n  dim_date.\"ISO_WEEK_END_DATE\",\n  dim_date.\"PRIOR_YEAR_ISO_WEEK_START_DATE\",\n  dim_date.\"PRIOR_YEAR_ISO_WEEK_END_DATE\",\n  dim_date.\"ISO_WEEK_OF_YEAR\",\n  dim_date.\"PRIOR_YEAR_WEEK_OF_YEAR\",\n  dim_date.\"PRIOR_YEAR_ISO_WEEK_OF_YEAR\",\n  dim_date.\"MONTH_OF_YEAR\",\n  dim_date.\"MONTH_NAME\",\n  dim_date.\"MONTH_NAME_SHORT\",\n  dim_date.\"MONTH_START_DATE\",\n  dim_date.\"MONTH_END_DATE\",\n  dim_date.\"PRIOR_YEAR_MONTH_START_DATE\",\n  dim_date.\"PRIOR_YEAR_MONTH_END_DATE\",\n  dim_date.\"QUARTER_OF_YEAR\",\n  dim_date.\"QUARTER_START_DATE\",\n  dim_date.\"QUARTER_END_DATE\",\n  dim_date.\"YEAR_NUMBER\",\n  dim_date.\"YEAR_START_DATE\",\n  dim_date.\"YEAR_END_DATE\"\nfrom adventureworks.marts.fact_sale as fact_sale\nleft join adventureworks.marts.dim_product as dim_product on fact_sale.product_key = dim_product.product_key\nleft join adventureworks.marts.dim_customer as dim_customer on fact_sale.customer_key = dim_customer.customer_key\nleft join adventureworks.marts.dim_credit_card as dim_credit_card on fact_sale.creditcard_key = dim_credit_card.creditcard_key\nleft join adventureworks.marts.dim_address as dim_address on fact_sale.ship_address_key = dim_address.address_key\nleft join adventureworks.marts.dim_order_status as dim_order_status on fact_sale.order_status_key = dim_order_status.order_status_key\nleft join adventureworks.marts.dim_date as dim_date on fact_sale.orderdate = dim_date.date_day", "relation_name": "adventureworks.marts.report_sale"}], "elapsed_time": 7.2368550300598145, "args": {"indirect_selection": "eager", "log_path": "/Users/kingmoh/Desktop/sample_dbt_proj_with_cicd/transform/adventureworks/logs", "project_dir": "/Users/kingmoh/Desktop/sample_dbt_proj_with_cicd/transform/adventureworks", "invocation_command": "dbt run --target prod --profiles-dir .", "target": "prod", "macro_debugging": false, "which": "run", "use_colors_file": true, "defer": false, "write_json": true, "log_level_file": "debug", "partial_parse_file_diff": true, "profiles_dir": ".", "introspect": true, "exclude": [], "static_parser": true, "send_anonymous_usage_stats": true, "warn_error_options": {"include": [], "exclude": []}, "cache_selected_only": false, "vars": {}, "populate_cache": true, "quiet": false, "strict_mode": false, "log_file_max_bytes": 10485760, "select": [], "use_colors": true, "log_level": "info", "partial_parse": true, "version_check": true, "print": true, "log_format": "default", "show_resource_report": false, "favor_state": false, "log_format_file": "debug", "printer_width": 80, "enable_legacy_logger": false}}